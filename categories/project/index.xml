<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Project - Category - YOUHEE</title>
        <link>http://youheekil.github.io/categories/project/</link>
        <description>Project - Category - YOUHEE</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>youhee.kil@gmail.com (Youhee Kil)</managingEditor>
            <webMaster>youhee.kil@gmail.com (Youhee Kil)</webMaster><lastBuildDate>Wed, 08 Jun 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://youheekil.github.io/categories/project/" rel="self" type="application/rss+xml" /><item>
    <title>[Starbucks Twitter Sentiment Analysis] 1. Environment Setup</title>
    <link>http://youheekil.github.io/project1-1.-starbucks-twitter-sentimental-analysis/</link>
    <pubDate>Wed, 08 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Youhee</author>
    <guid>http://youheekil.github.io/project1-1.-starbucks-twitter-sentimental-analysis/</guid>
    <description><![CDATA[Setup with Confluent Kafka, Spark, Delta Lake with Databricks and AWS   Project Final Diagram   Instruction In this post, we will set up environment to perform Starbucks Twitter Sentiment Analysis with Confluent Kafka, Spark, Delta Lake with Databricks and AWS.
Step 1. Twitter API Credentials As we performed in the previous post, we need to get Twitter API Credentials. After getting it, we save these credential information in .]]></description>
</item>
<item>
    <title>[Starbucks Twitter Sentiment Analysis] 0. Architecture Planning</title>
    <link>http://youheekil.github.io/project1-0.-starbucks-twitter-sentimental-analysis/</link>
    <pubDate>Mon, 06 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Youhee</author>
    <guid>http://youheekil.github.io/project1-0.-starbucks-twitter-sentimental-analysis/</guid>
    <description><![CDATA[Architecture Planning   From Kafka to Delta Lake using Apache Spark Structured Streaming   Image Source: From Kafka to Delta Lake using Apache Spark Structured Streaming
1. Aim The aim of the Starbucks Twitter Sentimental Analysis project is to build end-to-end twitter data streaming pipeline to analyze brand sentiment analysis.
 Brand sentiment analysis is, to put it simply, a way of determining the general attitude toward your brand, product, or service.]]></description>
</item>
<item>
    <title>[SongPlz-Bot] 3. ETL Steps</title>
    <link>http://youheekil.github.io/project2-3.-etl-steps/</link>
    <pubDate>Fri, 27 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Youhee</author>
    <guid>http://youheekil.github.io/project2-3.-etl-steps/</guid>
    <description><![CDATA[Steps 1. Set up virtual environment 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  where python # find the location of python  pip install pipenv # install pipenv which is virtual environment pip list mkdir &lt;project folder&gt; &amp;&amp; cd &lt;project folder&gt; # the ending of the path would be `/python.exe`  pipenv shell --python &lt;the path of python version you want to use&gt; pip list # list of packages  pipenv --venv # path to version environment  pipenv install pandas pip list # check if pandas is installed  # start the created virtual env pipenv shell   2.]]></description>
</item>
<item>
    <title>[SongPlz-Bot] 2. Severless &amp; Data Ingestion &amp; Recommender System</title>
    <link>http://youheekil.github.io/project2-2.-songplz-bot/</link>
    <pubDate>Mon, 23 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Youhee</author>
    <guid>http://youheekil.github.io/project2-2.-songplz-bot/</guid>
    <description><![CDATA[There are two basic recommender systems: (1) Collaborative Filtering, (2) Content-Based Filtering. It differs by what kinds of data that you are working with. Collaborative Filtering approach works with the user-item interactions types of data, such as ratings or buying behavior. On the other hand, Content-Based Filtering approach is for the attribute information about the users and items, such as textual profiles or relevant keywords.
In this post, I am going to perform an effective song recommendataion system with the combination of two user&rsquo;s informations - mood and favorite artist.]]></description>
</item>
<item>
    <title>[SongPlz-Bot] 1. Slack and Spotify API</title>
    <link>http://youheekil.github.io/project2-1.-songplz-bot/</link>
    <pubDate>Sun, 22 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Youhee</author>
    <guid>http://youheekil.github.io/project2-1.-songplz-bot/</guid>
    <description><![CDATA[SongPlz Bot - Slack and Spotify API What is API API stands for Application Programming Interface. The most common example to describe the API is being a waiter in the restaurant.
  Interface between human and object   Interface  Interface is a program that allows a user to interact computers in person or over a network, which is a software intermediary that allows two applications to talk to each other]]></description>
</item>
<item>
    <title>[SongPlz-Bot] 0. Slack Serverless Song Recommendataion Chatbot (SongPlz) - Architecture Planning</title>
    <link>http://youheekil.github.io/project2-0.-songplz-bot/</link>
    <pubDate>Sat, 21 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Youhee</author>
    <guid>http://youheekil.github.io/project2-0.-songplz-bot/</guid>
    <description><![CDATA[SongPlz Bot - Architecture Planning 1. Aim The aim of this SongPlz Bot project (Slack Song Recommendation Bot) is to build a data pipeline to create a chatting bot for song recommendation with Serverless architecture which is a way to develop and run applications and services without managing infrastructure (AWS). If you are still unsure about serverless architecture, please click here.
There are many cloud services available providing FaaS such as AWS Lambda, Azure Functions, and Google Cloud Function.]]></description>
</item>
</channel>
</rss>
