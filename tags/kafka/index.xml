<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>kafka - Tag - YOUHEE</title>
        <link>http://youheekil.github.io/tags/kafka/</link>
        <description>kafka - Tag - YOUHEE</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>youhee.kil@gmail.com (Youhee Kil)</managingEditor>
            <webMaster>youhee.kil@gmail.com (Youhee Kil)</webMaster><lastBuildDate>Wed, 08 Jun 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://youheekil.github.io/tags/kafka/" rel="self" type="application/rss+xml" /><item>
    <title>[Starbucks Twitter Sentiment Analysis] Instructions and Spark NLP</title>
    <link>http://youheekil.github.io/project1-1.-starbucks-twitter-sentimental-analysis/</link>
    <pubDate>Wed, 08 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Youhee</author>
    <guid>http://youheekil.github.io/project1-1.-starbucks-twitter-sentimental-analysis/</guid>
    <description><![CDATA[Setup with Confluent Kafka, Spark, Delta Lake with Databricks and AWS   Project Final Diagram   Instruction In this post, we will set up environment to perform Starbucks Twitter Sentiment Analysis with Confluent Kafka, Spark, Delta Lake with Databricks and AWS.
Step 1. Twitter API Credentials As we performed in the previous post, we need to get Twitter API Credentials. After getting it, we save these credential information in .]]></description>
</item>
<item>
    <title>[Starbucks Twitter Sentiment Analysis] Architecture Planning</title>
    <link>http://youheekil.github.io/project1-0.-starbucks-twitter-sentimental-analysis/</link>
    <pubDate>Mon, 06 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Youhee</author>
    <guid>http://youheekil.github.io/project1-0.-starbucks-twitter-sentimental-analysis/</guid>
    <description><![CDATA[Architecture Planning   From Kafka to Delta Lake using Apache Spark Structured Streaming   Image Source: From Kafka to Delta Lake using Apache Spark Structured Streaming
1. Aim The aim of the Starbucks Twitter Sentimental Analysis project is to build end-to-end twitter data streaming pipeline to analyze brand sentiment analysis.
 Brand sentiment analysis is, to put it simply, a way of determining the general attitude toward your brand, product, or service.]]></description>
</item>
<item>
    <title>[Kafka] Running Kafka with Docker (python)</title>
    <link>http://youheekil.github.io/running-kafka-docker/</link>
    <pubDate>Sat, 21 May 2022 10:38:13 &#43;0900</pubDate>
    <author>Youhee</author>
    <guid>http://youheekil.github.io/running-kafka-docker/</guid>
    <description><![CDATA[Kafka with Docker   In this post, we would like to go over how to run Kafka with Docker and Python. Before starting the post, make sure you have installed Docker (Docker hub) on your computer.
Step 1. Docker Image Setup Okay, first, let&rsquo;s create a directory folder to store docker-compose.yml file. The docker-compose file does not run your code itself.
1  $ mkdir ~/docker-kafka &amp;&amp; cd docker-kafka   You can pull kafka and zookeeper images by using this docker pull command, more detailed explanation can be found in the following link - kafka and zookeeper from Docker Hub.]]></description>
</item>
<item>
    <title>[Udacity] Data Streaming</title>
    <link>http://youheekil.github.io/udacity-dataengineer-datastreaming/</link>
    <pubDate>Thu, 19 May 2022 13:38:13 &#43;0900</pubDate>
    <author>Youhee</author>
    <guid>http://youheekil.github.io/udacity-dataengineer-datastreaming/</guid>
    <description><![CDATA[Udacity Program   Kafka (figure)   Technologies used  Apache Kafka, Kafka Connect, KSQL, Faust Stream Processing, Spark Structured Streaming   About The Nanodegree Data Streaming skill was gained to be prepared for the next era of data engineering. Learned how to analyze data in real-time using Apache Kafka and Spark, and build applications to process live insights from data at scale.
Program Details During the program, we completed two courses with two projects.]]></description>
</item>
</channel>
</rss>
